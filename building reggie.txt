================
   DISCLAIMER
================
Program error reports tend to show the directory of the
build location! So it will go "C:/Users/[yourname]/..."
for example.

Also building on Mac and Linux hasn't been tested yet so uh

===========================
  Building Without Cython
===========================
Building without Cython will slow down the program a bit
when it deals with anything LH related.

STEP 1:
You need to have Python 3.5 minimum, so make sure
to install it and add it to PATH.
Run these to add the required modules:
	pip install PyQt5
	pip install nsmblib
	pip install https://github.com/pyinstaller/pyinstaller/archive/develop.zip

STEP 2:
In libs/__init__.py, change:
	has_cython = True
to
	has_cython = False

STEP 3 (Optional):
You can change the version by editing PROJECT_VERSION's value in build_reggie.py,
and by editing the three ReggieVersion's values in globals_.py.

STEP 4 (Windows):
Run build_reggie.bat, wait for it to finish, and get the application from the distrib folder.

STEP 4.5 (Linux and Mac OSX):
Run the following command in the build_reggie.py's directory:
	python -OO build_reggie.py

Wait for it to finish, and get the application from the distrib folder.

========================
  Building With Cython
========================
Building with Cython will speed up the program a bit
when it deals with anything LH related.
It's also more painful to set up.

STEP 1:
You NEED to use Python 3.7, so make sure to install
it and add it to PATH.
On that version, run these to add the required modules:
	py -3.7 -m pip install PyQt5
	py -3.7 -m pip install nsmblib
	py -3.7 -m pip install Cython
	py -3.7 -m pip install https://github.com/pyinstaller/pyinstaller/archive/develop.zip

STEP 2:
In libs/__init__.py, remove the lines:
    import pyximport
    pyximport.install()

STEP 3 (Windows):
In the libs folder, run the compile.bat, and then delete
the .pyx files afterwards.
NOTE: The compile.bat doesn't look for Python 3.7 specifically,
so if nothing happens when ran, edit the script to use whichever
version of Python you have has Cython installed.

STEP 3.5 (Linux and Mac OSX):
Run this command in the libs folder directory:
	py -3.7 compile.py build_ext --inplace

Get the created .so files in the new libs folder.
Rename them to correspond with their respective .pyx name (but leave the filetype).
Delete the pyx's, and other created files/folders.

STEP 4 (Windows):
Download the Microsoft Build Tools 2015 installer:
http://download.microsoft.com/download/5/F/7/5F7ACAEB-8363-451F-9425-68A90F98B238/visualcppbuildtools_full.exe

STEP 4.5 (Linux and Mac OSX):
Make sure you have a compatible C compiler with Cython. For Linux and Mac OSX, you want "GCC".
GCC is usually preinstalled on Linux, but if you don't have it, the command sudo apt-get install build-essential will fetch everything you need.
On MacOSX, you can retrieve gcc by installing Appleâ€™s XCode through running the command xcode-select --install.

STEP 5 (Optional):
You can change the version by editing PROJECT_VERSION's value in build_reggie.py,
and by editing the three ReggieVersion's values in globals_.py.

STEP 6 (Windows):
Run build_reggie.bat, wait for it to finish, and get the application from the
distrib folder.

STEP 6.5 (Linux and Mac OSX):
Run the following command in the build_reggie.py's directory:
	python -OO build_reggie.py

Wait for it to finish, and get the application from the distrib folder.